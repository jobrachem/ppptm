[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.sdist]
exclude = [
  "/.github",
  "/docs",
]

[tool.hatch.build.targets.wheel]
packages = ["ppptm"]

[project]
name = "ppptm"
dynamic = ["version"]
description = ''
readme = "README.md"
requires-python = ">=3.10"
license = "MIT"
keywords = []
authors = [
  { name = "Johannes Brachem", email = "jbrachem@posteo.de" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
    "liesel@git+https://github.com/liesel-devs/liesel.git@graphbuilder_float32#egg=liesel",
    "liesel_ptm@git+https://github.com/liesel-devs/liesel-ptm.git@stream-prior#egg=liesel_ptm"
]

[project.optional-dependencies]
dev = [
    "pytest",
    "black",
    "flake8",
    "pre-commit",
    "mypy",
    "isort",
    "pyupgrade",
    "pytest-cov"
]

[project.urls]
Documentation = "https://github.com/Johannes Brachem/ppptm#readme"
Issues = "https://github.com/Johannes Brachem/ppptm/issues"
Source = "https://github.com/Johannes Brachem/ppptm"


[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.version]
path = "ppptm/__about__.py"


[tool.hatch.envs.hatch-test]
parallel = true


[tool.hatch.envs.typing]
extra-dependencies = [
  "mypy>=1.0.0",
]

[tool.hatch.envs.typing.scripts]
check = "mypy --install-types --non-interactive {args:ppptm tests}"

[tool.hatch.envs.hatch-static-analysis]
dependencies = ["black", "flake8", "isort", "mypy", "pyupgrade", "pre-commit"]

[tool.hatch.envs.hatch-static-analysis.scripts]
format-check = [
  "black --check --diff {args:.}",
  "isort --check-only --diff {args:.}",
  "mypy --ignore-missing-imports --scripts-are-modules {args:.}"
]
format-fix = [
  "pre-commit run --all",
]
lint-check = ""
lint-fix = "lint-check"


[tool.coverage.run]
source_pkgs = ["ppptm", "tests"]
branch = true
parallel = true
omit = [
  "ppptm/__about__.py",
]

[tool.coverage.paths]
ppptm = ["ppptm", "*/ppptm/ppptm"]
tests = ["tests", "*/ppptm/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.isort]
profile = "black"
